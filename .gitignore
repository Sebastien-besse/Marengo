# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/
*.xcuserstate
*.xcuserdatad/

## Xcode 8 and earlier
*.xcscmblueprint
*.xccheckout

## Xcode 4
*.xcworkspace
!*.xcworkspace/contents.xcworkspacedata
!*.xcworkspace/xcshareddata/

## Xcode 5
*.xcuserstate

## Xcode 6
*.xcuserstate

## Xcode 7
*.xcuserstate

## Xcode 8
*.xcuserstate

## Xcode 9
*.xcuserstate

## Xcode 10
*.xcuserstate

## Xcode 11
*.xcuserstate

## Xcode 12
*.xcuserstate

## Xcode 13
*.xcuserstate

## Xcode 14
*.xcuserstate

## Xcode 15
*.xcuserstate

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata dir, do not check in
.swiftpm/xcode/package.xcworkspace/contents.xcworkspacedata
.swiftpm/xcode/xcuserdata/
.swiftpm/configuration/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
*.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
Carthage/Checkouts
Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# IDEs
.vscode/
.idea/

# Backup files
*~
*.tmp
*.bak

# Log files
*.log

# Configuration files (if they contain sensitive info)
Config.plist
config.json
secrets.plist

# Firebase
GoogleService-Info.plist
google-services.json
firebase_options.dart

# Environment variables
.env
.env.local
.env.production
.env.staging

# Archives
*.zip
*.tar.gz
*.rar

# Temporary files
*.swp
*.swo
*~.nib

# Build artifacts
*.app
*.ipa
*.dSYM.zip
*.dSYM

# Coverage reports
*.gcov
*.gcno
*.gcda

# Profiling data
*.profdata